{"version":3,"sources":["components/Nav/Nav.js","components/Container/Container.js","components/Row/Row.js","components/Col/Col.js","pages/Add.js","components/ViewProducts/ViewProducts.js","pages/View.js","pages/Update.js","pages/OrderList.js","pages/Home.js","pages/Login.js","pages/Register.js","components/PrivateRoute/PrivateRoute.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","props","react_default","a","createElement","className","react_router_dom","to","authorized","onClick","logout","Container","Object","assign","Row","Col","size","Add","state","brand","product","type","par","count","handleInputChange","event","_event$target","target","name","value","_this","setState","defineProperty","handleFormSubmit","preventDefault","data","console","log","axios","post","then","res","clearFields","catch","err","components_Row_Row","components_Col_Col","this","onChange","placeholder","defaultValue","Component","ViewProducts","scope","products","map","key","_id","toggleUpdate","change","moment","updated","format","updateItem","toggleUpdateOff","isOrdered","addOrder","toggleUpdateOn","View","getProducts","get","id","put","addedToList","toggleAllUpdatesOff","components_ViewProducts_ViewProducts","React","Update","option","singleProduct","getSingleProduct","_this2","readOnly","OrderList","orderlist","hide","getOrderList","deleteItem","clearList","exportPDF","save","item","style","position","left","height","width","padding","backgroundColor","margin","overflowX","overflowY","main","paperSize","fileName","title","subject","keywords","ref","r","Home","lowInventory","getLowInventory","Login","username","password","trim","login","toLowerCase","message","isAuthorized","href","Register","email","register","error","PrivateRoute","_ref","component","rest","objectWithoutProperties","react_router","render","auth","App","components_Nav_Nav","components_Container_Container","components_PrivateRoute_PrivateRoute","exact","path","pages_Login","pages_Register","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4NAmDeA,EA9CH,SAAAC,GACR,OACIC,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iDACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,kCAAkCE,GAAG,SAArD,aAIXN,EAAMO,WACHN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mDACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,sBAAsBE,GAAG,SAAzC,SAEJL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,sBAAsBE,GAAG,SAAzC,SAEJL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,sBAAsBE,GAAG,QAAzC,QAEJL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,sBAAsBE,GAAG,WAAzC,WAEJL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,sBAAsBE,GAAG,cAAzC,eAEJL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,sBAAsBE,GAAG,UAAUE,QAASR,EAAMS,QAAlE,YAIJR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mDAEVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,sBAAsBE,GAAG,UAAzC,UAEJL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,sBAAsBE,GAAG,aAAzC,gBCnCbI,EANG,SAAAV,GACd,OACIC,EAAAC,EAAAC,cAAA,MAAAQ,OAAAC,OAAA,CAAKR,UAAU,aAAgBJ,6BCKxBa,EAPH,SAAAb,GACR,OACIC,EAAAC,EAAAC,cAAA,MAAAQ,OAAAC,OAAA,CAAKR,UAAU,OAAUJ,KCIlBc,EANH,SAAAd,GACR,OACIC,EAAAC,EAAAC,cAAA,MAAAQ,OAAAC,OAAA,CAAKR,UAAWJ,EAAMe,MAAUf,KC0HzBgB,6MAxHXC,MAAQ,CACJC,MAAO,GACPC,QAAS,GACTC,KAAM,GACNC,IAAK,GACLC,MAAO,MAGXC,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdC,EAAKC,SAALnB,OAAAoB,EAAA,EAAApB,CAAA,GACKgB,EAAOC,OAIhBI,iBAAmB,SAAAR,GACfA,EAAMS,iBAEN,IAAIC,EAAO,CACPhB,MAAOW,EAAKZ,MAAMC,MAClBC,QAASU,EAAKZ,MAAME,QACpBC,KAAMS,EAAKZ,MAAMG,KACjBC,IAAKQ,EAAKZ,MAAMI,IAChBC,MAAOO,EAAKZ,MAAMK,OAGtBa,QAAQC,IAAIF,GAEZG,IAAMC,KAAK,gBAAiBJ,GAAMK,KAAK,SAAAC,GAAG,OAAIX,EAAKY,gBAC9CC,MAAM,SAAAC,GAAG,OAAIR,QAAQC,IAAIO,QAIlCF,YAAc,WACVZ,EAAKC,SAAS,CACVZ,MAAO,GACPC,QAAS,GACTC,KAAM,GACNC,IAAK,GACLC,MAAO,8EAKX,OACIrB,EAAAC,EAAAC,cAACyC,EAAD,CAAKxC,UAAU,eAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,sBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,wBACNd,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,QACLC,MAAOkB,KAAK7B,MAAMC,MAClB6B,SAAUD,KAAKvB,kBACfH,KAAK,OACLhB,UAAU,eACV4C,YAAY,kBAEpB/C,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,wBACNd,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,UACLC,MAAOkB,KAAK7B,MAAME,QAClB4B,SAAUD,KAAKvB,kBACfH,KAAK,OACLhB,UAAU,eACV4C,YAAY,uBAEpB/C,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,wBACNd,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAQwB,KAAK,OACToB,SAAUD,KAAKvB,kBACfK,MAAOkB,KAAK7B,MAAMG,KAClBhB,UAAU,iBACVH,EAAAC,EAAAC,cAAA,UAAQ8C,cAAY,GAApB,cACAhD,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,SAAd,SACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,OAAd,OACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,OAAd,OACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,WAAd,WACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,WAAd,WACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,QAAd,QACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,WAAd,WACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,SAAd,WAGR3B,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,wBACNd,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,MACLC,MAAOkB,KAAK7B,MAAMI,IAClB0B,SAAUD,KAAKvB,kBACfH,KAAK,OACLhB,UAAU,eACV4C,YAAY,6DAEpB/C,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,wBACNd,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,QACLC,MAAOkB,KAAK7B,MAAMK,MAClByB,SAAUD,KAAKvB,kBACfH,KAAK,OACLhB,UAAU,eACV4C,YAAY,uCAEpB/C,EAAAC,EAAAC,cAAA,UACIiB,KAAK,SACLhB,UAAU,kBACVI,QAASsC,KAAKd,kBAHlB,+BA7GVkB,6BCsEHC,EAxEM,SAAAnD,GACjB,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACSH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,SACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,WACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,QACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,SACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,OACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,gBACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,aAGRnD,EAAAC,EAAAC,cAAA,aACKH,EAAMqD,SAASC,IAAI,SAAAnC,GAAO,OAGnBlB,EAAAC,EAAAC,cAAA,MAAIoD,IAAKpC,EAAQqC,KAEbvD,EAAAC,EAAAC,cAAA,UAAKgB,EAAQD,OACbjB,EAAAC,EAAAC,cAAA,UAAKgB,EAAQA,SACblB,EAAAC,EAAAC,cAAA,UAAKgB,EAAQC,MAGZD,EAAQsC,aACJxD,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,SACAwB,KAAK,QACLP,KAAK,SACL2B,SAAU/C,EAAM0D,OAChB9B,MAAO5B,EAAMsB,MACblB,UAAU,kBAEbH,EAAAC,EAAAC,cAAA,UAAKgB,EAAQG,OAElBrB,EAAAC,EAAAC,cAAA,UAAKgB,EAAQE,KACbpB,EAAAC,EAAAC,cAAA,UAAKwD,IAAOxC,EAAQyC,SAASC,OAAO,yBAEnC1C,EAAQsC,aACJxD,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,UACIK,QAAS,kBAAMR,EAAM8D,WAAW3C,EAAQqC,MACxCpD,UAAU,0BAFd,UAGAH,EAAAC,EAAAC,cAAA,UACIK,QAAS,kBAAMR,EAAM+D,gBAAgB5C,EAAQqC,MAC7CpD,UAAU,yBAFd,WAIHH,EAAAC,EAAAC,cAAA,UACIgB,EAAQ6C,UACR/D,EAAAC,EAAAC,cAAA,UACGC,UAAU,0BADb,UAEAH,EAAAC,EAAAC,cAAA,UACGK,QAAS,kBAAMR,EAAMiE,SAAS9C,EAAQqC,MACtCpD,UAAU,0BAFb,qBAIDH,EAAAC,EAAAC,cAAA,UACIK,QAAS,kBAAMR,EAAMkE,eAAe/C,EAAQqC,MAC5CpD,UAAU,0BAFd,4BC0BzC+D,6MA/EXlD,MAAQ,CACJoC,SAAU,GACV/B,MAAO,MAOXC,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdC,EAAKC,SAALnB,OAAAoB,EAAA,EAAApB,CAAA,GACKgB,EAAOC,OAIhBwC,YAAc,WACV/B,IAAMgC,IAAI,iBACL9B,KAAK,SAAAC,GAEF,IAAIN,EAAOM,EAAIN,KACfL,EAAKC,SAAS,CAAEuB,SAAUnB,SAItC+B,SAAW,SAAAK,GACPjC,IAAMkC,IAAI,kBAAoBD,EAAI,CAAEN,WAAW,EAAMQ,YAAab,QAAYpB,KAAK,SAAAC,GAAG,OAAIX,EAAKuC,mBAGnGF,eAAiB,SAAAI,GACbjC,IAAMkC,IAAI,eAAiBD,EAAI,CAAEb,cAAc,IAAQlB,KAAK,SAAAC,GAAG,OAAIX,EAAKuC,mBAG5EL,gBAAkB,SAAAO,GACdjC,IAAMkC,IAAI,eAAiBD,EAAI,CAAEb,cAAc,IAASlB,KAAK,SAAAC,GAAG,OAAIX,EAAKuC,mBAG7EK,oBAAsB,WAClBpC,IAAMkC,IAAI,eAAgB,CAACd,cAAc,IAAQlB,KAAK,SAAAC,GAAG,OAAIX,EAAKuC,mBAGtEN,WAAa,SAAAQ,GAET,IAAIpC,EAAO,CACPZ,MAAOO,EAAKZ,MAAMK,MAClBsC,QAASD,MACTF,cAAc,GAGlBpB,IAAMkC,IAAI,iBAAmBD,EAAIpC,GAChCK,KAAK,SAAAC,GAAG,OAAIX,EAAKuC,oGA5ClBtB,KAAK2B,uDAiDL,OACIxE,EAAAC,EAAAC,cAACyC,EAAD,CAAKxC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXH,EAAAC,EAAAC,cAACuE,EAAD,CACIrB,SAAUP,KAAK7B,MAAMoC,SACrBK,OAAQZ,KAAKvB,kBACbD,MAAOwB,KAAK7B,MAAMK,MAClBwC,WAAYhB,KAAKgB,WACjBM,YAAatB,KAAKsB,YAClBK,oBAAqB3B,KAAK2B,oBAC1BV,gBAAiBjB,KAAKiB,gBACtBG,eAAgBpB,KAAKoB,eACrBD,SAAUnB,KAAKmB,qBAvExBU,IAAMzB,WC6IV0B,6MA5IX3D,MAAQ,CACJ4D,OAAQ,GACRxB,SAAU,GACVyB,cAAe,GACfxD,MAAO,MAOX8C,YAAc,WACV/B,IAAMgC,IAAI,iBACL9B,KAAK,SAAAC,GAEF,IAAIN,EAAOM,EAAIN,KACfL,EAAKC,SAAS,CAAEuB,SAAUnB,SAItCX,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdC,EAAKC,SAALnB,OAAAoB,EAAA,EAAApB,CAAA,GACKgB,EAAOC,OAIhBmD,iBAAmB,SAAAT,GACfjC,IAAMgC,IAAI,iBAAmBC,GACxB/B,KAAK,SAAAC,GAAG,OAAIX,EAAKC,SAAS,CAAEgD,cAAetC,EAAIN,YAIxDF,iBAAmB,SAAAR,GACfA,EAAMS,iBAEN,IAAIqC,EAAKzC,EAAKZ,MAAM4D,OAEhB3C,EAAO,CACPZ,MAAOO,EAAKZ,MAAMK,MAClBsC,QAASD,OAGbtB,IAAMkC,IAAI,iBAAmBD,EAAIpC,GAChCK,KAAK,SAAAC,GAAG,OAAIX,EAAKkD,iBAAiBlD,EAAKZ,MAAM4D,8FApC9C/B,KAAKsB,+CAwCA,IAAAY,EAAAlC,KACL,OACI7C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyC,EAAD,CAAKxC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,oBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UACIwB,KAAK,SACLoB,SAAUD,KAAKvB,kBACfnB,UAAU,iBAEVH,EAAAC,EAAAC,cAAA,gCAEC2C,KAAK7B,MAAMoC,SAASC,IAAI,SAAAnC,GAAO,OAC5BlB,EAAAC,EAAAC,cAAA,UAAQoD,IAAKpC,EAAQqC,IACrB5B,MAAOT,EAAQqC,KACdrC,EAAQD,MAFT,IAEiBC,EAAQA,YAGjClB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBI,QAAS,kBAAMwE,EAAKD,iBAAiBC,EAAK/D,MAAM4D,UAAzF,aAKZ5E,EAAAC,EAAAC,cAACyC,EAAD,CAAKxC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC0C,EAAD,CAAKzC,UAAU,YACXH,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,iCACNd,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,QAAQP,KAAK,OAAOhB,UAAU,yBAAyBwB,MAAOkB,KAAK7B,MAAM6D,cAAc5D,MAAO+D,UAAQ,KAEnHhF,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,iCACNd,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,UAAUP,KAAK,OAAOhB,UAAU,yBAAyBwB,MAAOkB,KAAK7B,MAAM6D,cAAc3D,QAAS8D,UAAQ,KAEvHhF,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,iCACNd,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACAwB,KAAK,OAAOP,KAAK,OAAOhB,UAAU,yBAAyBwB,MAAOkB,KAAK7B,MAAM6D,cAAc1D,KAAM6D,UAAQ,MAGjHhF,EAAAC,EAAAC,cAAC0C,EAAD,CAAKzC,UAAU,YACXH,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,iCACNd,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,MAAMP,KAAK,OAAOhB,UAAU,yBAAyBwB,MAAOkB,KAAK7B,MAAM6D,cAAczD,IAAK4D,UAAQ,KAElHhF,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,iCACNd,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,YAAYP,KAAK,OAAOhB,UAAU,yBAAyBwB,MAAOkB,KAAK7B,MAAM6D,cAAcxD,MAAO2D,UAAQ,KAEzHnC,KAAK7B,MAAM6D,cAAclB,QACxB3D,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,iCACXd,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,UAAUP,KAAK,OAAOhB,UAAU,yBAAyBwB,MAAO+B,IAAOb,KAAK7B,MAAM6D,cAAclB,SAASC,OAAO,wBAAyBoB,UAAQ,KAE7JhF,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,iCACXd,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,UAAUP,KAAK,OAAOhB,UAAU,yBAAyBwB,MAAM,GAAGqD,UAAQ,MAM1FhF,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,wBACNd,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,QACLC,MAAOkB,KAAK7B,MAAMK,MAClByB,SAAUD,KAAKvB,kBACfH,KAAK,OACLhB,UAAU,eACV4C,YAAY,+BAEpB/C,EAAAC,EAAAC,cAAA,UACAK,QAASsC,KAAKd,iBACdZ,KAAK,SAAShB,UAAU,mBAFxB,qCAhIXuE,IAAMzB,mBCgIZgC,6MA/HXjE,MAAQ,CACJkE,UAAW,GACXC,MAAM,KAQVC,aAAe,WACXhD,IAAMgC,IAAI,kBACL9B,KAAK,SAAAC,GAAG,OAAIX,EAAKC,SAAS,CAAEqD,UAAW3C,EAAIN,YAGpDoD,WAAa,SAAAhB,GACTjC,IAAMkC,IAAI,kBAAoBD,EAAI,CAAEN,WAAW,IAC1CzB,KAAK,SAAAC,GAAG,OAAIX,EAAKwD,oBAG1BE,UAAY,WACRlD,IAAMkC,IAAI,iBAAkB,CAAEP,WAAW,IACpCzB,KAAK,SAAAC,GAAG,OAAIX,EAAKwD,oBAG1BG,UAAY,WACR3D,EAAKsD,UAAUM,2FAnBf3C,KAAKuC,gDAsBA,IAAAL,EAAAlC,KACL,OAEI7C,EAAAC,EAAAC,cAACyC,EAAD,CAAKxC,UAAU,eAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,cACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAEXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,SACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,WACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,QACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,SACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,OACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,cACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,aAGRnD,EAAAC,EAAAC,cAAA,aACK2C,KAAK7B,MAAMkE,UAAU7B,IAAI,SAAAoC,GAAI,OAC1BzF,EAAAC,EAAAC,cAAA,MAAIoD,IAAKmC,EAAKlC,KAEVvD,EAAAC,EAAAC,cAAA,UAAKuF,EAAKxE,OACVjB,EAAAC,EAAAC,cAAA,UAAKuF,EAAKvE,SACVlB,EAAAC,EAAAC,cAAA,UAAKuF,EAAKtE,MACVnB,EAAAC,EAAAC,cAAA,UAAKuF,EAAKrE,KACVpB,EAAAC,EAAAC,cAAA,UAAKuF,EAAKpE,OACVrB,EAAAC,EAAAC,cAAA,UAAKwD,IAAO+B,EAAKlB,aAAaX,OAAO,yBACrC5D,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UACAK,QAAS,kBAAMwE,EAAKM,WAAWI,EAAKlC,MACpCpD,UAAU,yBAFV,2BAQxBH,EAAAC,EAAAC,cAAA,UAAQK,QAASsC,KAAK0C,UAAWpF,UAAU,mBAA3C,iBACAH,EAAAC,EAAAC,cAAA,UAAQK,QAASsC,KAAKyC,UAAWnF,UAAU,kBAA3C,sBAIRH,EAAAC,EAAAC,cAAA,OAAKwF,MAAO,CACRC,SAAU,WACVC,KAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,OACTC,gBAAiB,QACjBC,OAAQ,OACRC,UAAW,SACXC,UAAW,WAEXnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAWC,UAAW,SAClBC,SAAS,iBACTC,MAAM,aACNC,QAAQ,GACRC,SAAS,GACTC,IAAK,SAACC,GAAD,OAAO5B,EAAKG,UAAYyB,IAE7B3G,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,SACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,WACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,QACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,SACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,OACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,gBAGRnD,EAAAC,EAAAC,cAAA,aACK2C,KAAK7B,MAAMkE,UAAU7B,IAAI,SAAAoC,GAAI,OAC1BzF,EAAAC,EAAAC,cAAA,MAAIoD,IAAKmC,EAAKlC,KAEVvD,EAAAC,EAAAC,cAAA,UAAKuF,EAAKxE,OACVjB,EAAAC,EAAAC,cAAA,UAAKuF,EAAKvE,SACVlB,EAAAC,EAAAC,cAAA,UAAKuF,EAAKtE,MACVnB,EAAAC,EAAAC,cAAA,UAAKuF,EAAKrE,KACVpB,EAAAC,EAAAC,cAAA,UAAKuF,EAAKpE,OACVrB,EAAAC,EAAAC,cAAA,UAAKwD,IAAO+B,EAAKlB,aAAaX,OAAO,wCAjHrDc,IAAMzB,WCiIf2D,6MAjIX5F,MAAQ,CACJ6F,aAAc,GACdxF,MAAO,MAOXC,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdC,EAAKC,SAALnB,OAAAoB,EAAA,EAAApB,CAAA,GACKgB,EAAOC,OAIhBmF,gBAAkB,WACd1E,IAAMgC,IAAI,qBAAqB9B,KAAK,SAAAC,GAAG,OAAIX,EAAKC,SAAS,CAAEgF,aAActE,EAAIN,YAGjF+B,SAAW,SAAAK,GACPjC,IAAMkC,IAAI,kBAAoBD,EAAI,CAAEN,WAAW,EAAMQ,YAAab,QAAYpB,KAAK,SAAAC,GAAG,OAAIX,EAAKkF,uBAGnG7C,eAAiB,SAAAI,GACbjC,IAAMkC,IAAI,eAAiBD,EAAI,CAAEb,cAAc,IAAQlB,KAAK,SAAAC,GAAG,OAAIX,EAAKkF,uBAG5EhD,gBAAkB,SAAAO,GACdjC,IAAMkC,IAAI,eAAiBD,EAAI,CAAEb,cAAc,IAASlB,KAAK,SAAAC,GAAG,OAAIX,EAAKkF,uBAG7EtC,oBAAsB,WAClBpC,IAAMkC,IAAI,eAAgB,CAAEd,cAAc,IAASlB,KAAK,SAAAC,GAAG,OAAIX,EAAKkF,uBAGxEjD,WAAa,SAAAQ,GAET,IAAIpC,EAAO,CACPZ,MAAOO,EAAKZ,MAAMK,MAClBsC,QAASD,MACTF,cAAc,GAGlBpB,IAAMkC,IAAI,iBAAmBD,EAAIpC,GAAMK,KAAK,SAAAC,GAAG,OAAIX,EAAKkF,wGAtCxDjE,KAAK2B,uDA0CA,IAAAO,EAAAlC,KACL,OACI7C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyC,EAAD,CAAKxC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,oCAGJF,EAAAC,EAAAC,cAACyC,EAAD,CAAKxC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,iBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,SACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,WACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,QACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,SACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,OACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,gBACAnD,EAAAC,EAAAC,cAAA,MAAIiD,MAAM,OAAV,aAGRnD,EAAAC,EAAAC,cAAA,aACK2C,KAAK7B,MAAM6F,aAAaxD,IAAI,SAAAnC,GAAO,OAG5BlB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAemD,IAAKpC,EAAQqC,KACtCvD,EAAAC,EAAAC,cAAA,UAAKgB,EAAQD,OACbjB,EAAAC,EAAAC,cAAA,UAAKgB,EAAQA,SACblB,EAAAC,EAAAC,cAAA,UAAKgB,EAAQC,MACZD,EAAQsC,aACJxD,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,QACLP,KAAK,OACL2B,SAAUiC,EAAKzD,kBACfK,MAAOoD,EAAK/D,MAAMK,MAClBlB,UAAU,kBAEjBH,EAAAC,EAAAC,cAAA,UAAKgB,EAAQG,OAClBrB,EAAAC,EAAAC,cAAA,UAAKgB,EAAQE,KACbpB,EAAAC,EAAAC,cAAA,UAAKwD,IAAOxC,EAAQyC,SAASC,OAAO,yBACnC1C,EAAQsC,aACJxD,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,UACIK,QAAS,kBAAMwE,EAAKlB,WAAW3C,EAAQqC,MACvCpD,UAAU,0BAFd,UAGAH,EAAAC,EAAAC,cAAA,UACIK,QAAS,kBAAMwE,EAAKjB,gBAAgB5C,EAAQqC,MAC5CpD,UAAU,yBAFd,WAIHH,EAAAC,EAAAC,cAAA,UACIgB,EAAQ6C,UACJ/D,EAAAC,EAAAC,cAAA,UACGC,UAAU,0BADb,UAEAH,EAAAC,EAAAC,cAAA,UACGK,QAAS,kBAAMwE,EAAKf,SAAS9C,EAAQqC,MACrCpD,UAAU,0BAFb,qBAILH,EAAAC,EAAAC,cAAA,UACIK,QAAS,kBAAMwE,EAAKd,eAAe/C,EAAQqC,MAC3CpD,UAAU,0BAFd,sCA9GzCuE,IAAMzB,WCwEV8D,6MAvEX/F,MAAQ,CACJgG,SAAU,GACVC,SAAU,MAId3F,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdC,EAAKC,SAALnB,OAAAoB,EAAA,EAAApB,CAAA,GACKgB,EAAOC,EAAMuF,YAItBC,MAAQ,SAAA5F,GACJA,EAAMS,iBACNI,IAAMC,KAAK,aAAc,CACrB2E,SAAUpF,EAAKZ,MAAMgG,SAASI,cAC9BH,SAAUrF,EAAKZ,MAAMiG,WACtB3E,KAAK,SAAAC,GACAA,EAAIN,KAAKoF,QACTnF,QAAQC,IAAI,UAEZD,QAAQC,IAAI,oBACZP,EAAK7B,MAAMuH,kBAEhB7E,MAAM,SAAAC,GACLR,QAAQC,IAAIO,KAEhBd,EAAKC,SAAS,CAAEoF,SAAU,8EAO1B,OACIjH,EAAAC,EAAAC,cAACyC,EAAD,CAAKxC,UAAU,eAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,wBACNd,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,WACLP,KAAK,OACLhB,UAAU,eACV2C,SAAUD,KAAKvB,qBAGvBtB,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,wBACNd,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,WACLP,KAAK,OACLhB,UAAU,eACV2C,SAAUD,KAAKvB,qBAGvBtB,EAAAC,EAAAC,cAAA,UAAQiB,KAAK,SAAShB,UAAU,4BAA4BI,QAASsC,KAAKsE,OAA1E,UAEJnH,EAAAC,EAAAC,cAAA,KAAGqH,KAAK,aAAR,sBA/DJtE,aC+ELuE,6MA9EXxG,MAAQ,CACJgG,SAAU,GACVC,SAAU,GACVQ,MAAO,MAGXC,SAAW,SAAAnG,GACPA,EAAMS,iBAENI,IAAMC,KAAK,gBAAiB,CACxB2E,SAAUpF,EAAKZ,MAAMgG,SAASI,cAC9BK,MAAO7F,EAAKZ,MAAMyG,MAClBR,SAAUrF,EAAKZ,MAAMiG,WACtB3E,KAAK,SAAAC,GACAA,EAAIN,KAAKoF,QACTzF,EAAKC,SAAS,CACV8F,MAAOpF,EAAIN,KAAKoF,WAGpBnF,QAAQC,IAAI,2BACZP,EAAK7B,MAAMuH,kBAEhB7E,MAAM,SAAAC,GACLR,QAAQC,IAAIO,KAEhBd,EAAKC,SAAS,CAAEoF,SAAU,QAG9B3F,kBAAoB,SAAAC,GAAS,IAAAC,EACDD,EAAME,OAAtBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdC,EAAKC,SAALnB,OAAAoB,EAAA,EAAApB,CAAA,GACKgB,EAAOC,6EAKZ,OACI3B,EAAAC,EAAAC,cAACyC,EAAD,CAAKxC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,wBACNd,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,WACLP,KAAK,OACLhB,UAAU,eACV2C,SAAUD,KAAKvB,qBAGvBtB,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,wBACNd,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,QACLP,KAAK,OACLhB,UAAU,eACV2C,SAAUD,KAAKvB,qBAGvBtB,EAAAC,EAAAC,cAAC0C,EAAD,CAAK9B,KAAK,wBACNd,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACIwB,KAAK,WACLP,KAAK,OACLhB,UAAU,eACV2C,SAAUD,KAAKvB,qBAGvBtB,EAAAC,EAAAC,cAAA,UAAQiB,KAAK,SAAShB,UAAU,4BAA4BI,QAASsC,KAAK6E,UAA1E,uBAtELzE,qBCSR2E,EARM,SAAAC,GAAA,IAAc5E,EAAd4E,EAAGC,UAAyBC,EAA5BrH,OAAAsH,EAAA,EAAAtH,CAAAmH,EAAA,sBACjB7H,EAAAC,EAAAC,cAAC+H,EAAA,EAADvH,OAAAC,OAAA,GAAWoH,EAAX,CAAiBG,OAAQ,SAACnI,GAAD,OACP,IAAdgI,EAAKI,KACHnI,EAAAC,EAAAC,cAAC+C,EAAclD,GACfC,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAU5H,GAAG,gBC4ER+H,6MAvEbpH,MAAQ,CACNV,YAAY,KAOdgH,aAAe,WACblF,IAAMgC,IAAI,mBACP9B,KAAK,SAAAC,GACAA,EAAIN,KAAKoF,QACXzF,EAAKC,SAAS,CAAEvB,YAAY,IAE5BsB,EAAKC,SAAS,CAAEvB,YAAY,MAG/BmC,MAAM,SAAAC,GACLR,QAAQC,IAAIO,GACZd,EAAKC,SAAS,CAAEvB,YAAY,SAIlCE,OAAS,WACP4B,IAAMgC,IAAI,eACP9B,KAAK,SAAAC,GACJL,QAAQC,IAAI,cACZP,EAAK0F,iBAEN7E,MAAM,SAAAC,GACLR,QAAQC,IAAIO,yFAzBhBG,KAAKyE,gDA+BL,OACEtH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAEEJ,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACmI,EAAD,CAAK7H,OAAQqC,KAAKrC,OAAQF,WAAYuC,KAAK7B,MAAMV,aACjDN,EAAAC,EAAAC,cAACoI,EAAD,KACEtI,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,KACEjI,EAAAC,EAAAC,cAACqI,EAAD,CAAcC,OAAK,EAACC,KAAK,QAAQX,UAAWlB,EAAMuB,KAAMtF,KAAK7B,MAAMV,aACnEN,EAAAC,EAAAC,cAACqI,EAAD,CAAcC,OAAK,EAACC,KAAK,OAAOX,UAAW/G,EAAKoH,KAAMtF,KAAK7B,MAAMV,aACjEN,EAAAC,EAAAC,cAACqI,EAAD,CAAcC,OAAK,EAACC,KAAK,QAAQX,UAAW5D,EAAMiE,KAAMtF,KAAK7B,MAAMV,aACnEN,EAAAC,EAAAC,cAACqI,EAAD,CAAcC,OAAK,EAACC,KAAK,UAAUX,UAAWnD,EAAQwD,KAAMtF,KAAK7B,MAAMV,aACvEN,EAAAC,EAAAC,cAACqI,EAAD,CAAcC,OAAK,EAACC,KAAK,aAAaX,UAAW7C,EAAWkD,KAAMtF,KAAK7B,MAAMV,aAC7EN,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAOQ,KAAK,UACT5F,KAAK7B,MAAMV,WACTN,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAU5H,GAAG,UACbL,EAAAC,EAAAC,cAACwI,EAAD,CAAOpB,aAAczE,KAAKyE,gBAG/BtH,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAOQ,KAAK,aACT5F,KAAK7B,MAAMV,WACTN,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAU5H,GAAG,UACbL,EAAAC,EAAAC,cAACyI,EAAD,CAAUrB,aAAczE,KAAKyE,2BA3D9BrE,aCJZ2F,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACP3B,SAASyB,GACT7G,KAAK,SAAAgH,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxI,QACfoI,UAAUC,cAAcM,WAK1BzH,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBM,MAAM,SAAAkF,GACLzF,QAAQyF,MAAM,4CAA6CA,KCjEjEiC,IAAS1B,OAAOlI,EAAAC,EAAAC,cAAC2J,EAAD,MAASC,SAASC,eAAe,SDelC,WACb,GAA6C,kBAAmBX,UAAW,CAGzE,GADkB,IAAIY,IAAIC,GAAwBnB,OAAOC,UAC3CmB,SAAWpB,OAAOC,SAASmB,OAIvC,OAGFpB,OAAOqB,iBAAiB,OAAQ,WAC9B,IAAMhB,EAAK,GAAAiB,OAAMH,GAAN,sBAENrB,EAwCX,SAAiCO,GAE/BkB,MAAMlB,GACH7G,KAAK,SAAAgI,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQpG,IAAI,gBAAgBqG,QAAQ,cAG7CrB,UAAUC,cAAcqB,MAAMpI,KAAK,SAAAgH,GACjCA,EAAaqB,aAAarI,KAAK,WAC7BwG,OAAOC,SAAS6B,aAKpB1B,EAAgBC,KAGnB1G,MAAM,WACLP,QAAQC,IACN,mEAzDA0I,CAAwB1B,GAHxBD,EAAgBC,MC9BxB2B","file":"static/js/main.fca2058b.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    Link\n} from \"react-router-dom\";\n\nconst Nav = props => {\n    return (\n        <div>\n\n            <ul className=\"nav bg-primary a-white justify-content-center\">\n                <li className=\"nav-item\">\n                    <h1><Link className=\"text-white text-decoration-none\" to=\"/home\">eBrius</Link></h1>\n                </li>\n            </ul>\n\n            {props.authorized ? (\n                <ul className=\"nav bg-secondary a-white justify-content-center\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link text-white\" to=\"/home\">Home</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link text-white\" to=\"/view\">View</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link text-white\" to=\"/add\">Add</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link text-white\" to=\"/update\">Update</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link text-white\" to=\"/orderlist\">Order List</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link text-white\" to=\"/logout\" onClick={props.logout}>Logout</Link>\n                    </li>\n                </ul>\n            ) : (\n                    <ul className=\"nav bg-secondary a-white justify-content-center\">\n\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link text-white\" to=\"/login\">Login</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link text-white\" to=\"/register\">Register</Link>\n                        </li>\n                    </ul>\n                )}\n        </div>\n    );\n}\n\nexport default Nav;","import React from \"react\";\n\nconst Container = props => {\n    return (\n        <div className=\"container\" {...props}></div>\n    );\n}\n\nexport default Container;","import React from \"react\";\n\nconst Row = props => {\n    return (\n        <div className=\"row\" {...props}></div>\n    );\n\n};\n\nexport default Row;","import React from \"react\";\n\nconst Col = props => {\n    return (\n        <div className={props.size} {...props}></div>\n    );\n}\n\nexport default Col;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Row from \"../components/Row/Row\";\nimport Col from \"../components/Col/Col\";\n\nclass Add extends Component {\n    state = {\n        brand: \"\",\n        product: \"\",\n        type: \"\",\n        par: \"\",\n        count: \"\",\n    };\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n\n        let data = {\n            brand: this.state.brand,\n            product: this.state.product,\n            type: this.state.type,\n            par: this.state.par,\n            count: this.state.count\n        }\n\n        console.log(data);\n\n        axios.post(\"/api/products\", data).then(res => this.clearFields())\n            .catch(err => console.log(err));\n\n    };\n\n    clearFields = () => {\n        this.setState({\n            brand: \"\",\n            product: \"\",\n            type: \"\",\n            par: \"\",\n            count: \"\"\n        })\n    }\n\n    render() {\n        return (\n            <Row className=\"text-center\">\n\n                <div className=\"card w-100 mt-3 border-dark\">\n                    <h4 className=\"card-header\">Add Inventory Item</h4>\n                    <div className=\"card-body\">\n                        <form>\n                            <Col size=\"form-group text-left\">\n                                <label>Brand Name</label>\n                                <input\n                                    name=\"brand\"\n                                    value={this.state.brand}\n                                    onChange={this.handleInputChange}\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Jack Daniels\"></input>\n                            </Col>\n                            <Col size=\"form-group text-left\">\n                                <label>Product Name</label>\n                                <input\n                                    name=\"product\"\n                                    value={this.state.product}\n                                    onChange={this.handleInputChange}\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Tennessee Whiskey\"></input>\n                            </Col>\n                            <Col size=\"form-group text-left\">\n                                <label>Product Type</label>\n                                <select name=\"type\"\n                                    onChange={this.handleInputChange}\n                                    value={this.state.type}\n                                    className=\"custom-select\">\n                                    <option defaultValue>Choose One</option>\n                                    <option value=\"Vodka\">Vodka</option>\n                                    <option value=\"Rum\">Rum</option>\n                                    <option value=\"Gin\">Gin</option>\n                                    <option value=\"Tequila\">Tequila</option>\n                                    <option value=\"Whiskey\">Whiskey</option>\n                                    <option value=\"Beer\">Beer</option>\n                                    <option value=\"Cordial\">Cordial</option>\n                                    <option value=\"Other\">Other</option>\n                                </select>\n                            </Col>\n                            <Col size=\"form-group text-left\">\n                                <label>Par</label>\n                                <input\n                                    name=\"par\"\n                                    value={this.state.par}\n                                    onChange={this.handleInputChange}\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Enter the number of units required for one business day\"></input>\n                            </Col>\n                            <Col size=\"form-group text-left\">\n                                <label>Initial Inventory</label>\n                                <input\n                                    name=\"count\"\n                                    value={this.state.count}\n                                    onChange={this.handleInputChange}\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Enter the current number of units\"></input>\n                            </Col>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-success\"\n                                onClick={this.handleFormSubmit}>Add To Inventory</button>\n                        </form>\n                    </div>\n                </div>\n            </Row>\n        );\n    };\n};\n\nexport default Add;","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ViewProducts = props => {\r\n    return (\r\n    <div className=\"table-responsive-sm\">\r\n                            <table className=\"table table-hover\">\r\n                                <thead className=\"thead-dark\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">Brand</th>\r\n                                        <th scope=\"col\">Product</th>\r\n                                        <th scope=\"col\">Type</th>\r\n                                        <th scope=\"col\">Count</th>\r\n                                        <th scope=\"col\">Par</th>\r\n                                        <th scope=\"col\">Last Updated</th>\r\n                                        <th scope=\"col\">Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {props.products.map(product =>\r\n                                        (\r\n\r\n                                            <tr key={product._id}>\r\n                                                \r\n                                                <td>{product.brand}</td>\r\n                                                <td>{product.product}</td>\r\n                                                <td>{product.type}</td>\r\n\r\n\r\n                                                {product.toggleUpdate ?\r\n                                                    (<td>\r\n                                                        <input\r\n                                                        name=\"count\"\r\n                                                        type=\"number\"\r\n                                                        onChange={props.change}\r\n                                                        value={props.count}\r\n                                                        className=\"form-control\"></input></td>) :\r\n                                                      \r\n                                                    (<td>{product.count}</td>)}\r\n\r\n                                                <td>{product.par}</td>\r\n                                                <td>{moment(product.updated).format('MMMM Do YYYY, h:mm A')}</td>\r\n\r\n                                                {product.toggleUpdate ?\r\n                                                    (<td>\r\n                                                        <button\r\n                                                            onClick={() => props.updateItem(product._id)}\r\n                                                            className=\"btn btn-success btn-sm\">Update</button>\r\n                                                        <button\r\n                                                            onClick={() => props.toggleUpdateOff(product._id)}\r\n                                                            className=\"btn btn-danger btn-sm\">Cancel</button>\r\n                                                    </td>) :\r\n                                                    (<td>\r\n                                                        {product.isOrdered ? \r\n                                                        (<button\r\n                                                            className=\"btn btn-success btn-sm\">✓</button>) : \r\n                                                        (<button\r\n                                                            onClick={() => props.addOrder(product._id)}\r\n                                                            className=\"btn btn-success btn-sm\">Add to Order List</button>)\r\n                                                        }\r\n                                                        <button\r\n                                                            onClick={() => props.toggleUpdateOn(product._id)}\r\n                                                            className=\"btn btn-warning btn-sm\">Update Inventory</button>\r\n                                                    </td>)}\r\n\r\n\r\n                                            </tr>\r\n                                        )\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n    )\r\n}\r\n\r\nexport default ViewProducts;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Row from \"../components/Row/Row\";\r\nimport moment from \"moment\";\r\nimport ViewProducts from \"../components/ViewProducts/ViewProducts\"\r\n\r\nclass View extends React.Component {\r\n    state = {\r\n        products: [],\r\n        count: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.toggleAllUpdatesOff();\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    getProducts = () => {\r\n        axios.get(\"/api/products\")\r\n            .then(res => {\r\n\r\n                let data = res.data;\r\n                this.setState({ products: data })\r\n            })\r\n    }\r\n\r\n    addOrder = id => {\r\n        axios.put(\"/api/orderlist/\" + id, { isOrdered: true, addedToList: moment() }).then(res => this.getProducts())\r\n    };\r\n\r\n    toggleUpdateOn = id => {\r\n        axios.put(\"/api/update/\" + id, { toggleUpdate: true }).then(res => this.getProducts());\r\n    };\r\n\r\n    toggleUpdateOff = id => {\r\n        axios.put(\"/api/update/\" + id, { toggleUpdate: false }).then(res => this.getProducts());\r\n    };\r\n\r\n    toggleAllUpdatesOff = () => {\r\n        axios.put(\"/api/update/\", {toggleUpdate: false}).then(res => this.getProducts());\r\n    }\r\n\r\n    updateItem = id => {\r\n\r\n        let data = {\r\n            count: this.state.count,\r\n            updated: moment(),\r\n            toggleUpdate: false\r\n        }\r\n\r\n        axios.put(\"/api/products/\" + id, data)\r\n        .then(res => this.getProducts())\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"text-center\">\r\n                <div className=\"card w-100 mt-3 border-dark\">\r\n                    <h4 className=\"card-header\">View Inventory</h4>\r\n                    <div className=\"card-body\">\r\n\r\n                        <ViewProducts \r\n                            products={this.state.products}\r\n                            change={this.handleInputChange}\r\n                            count={this.state.count}\r\n                            updateItem={this.updateItem}\r\n                            getProducts={this.getProducts}\r\n                            toggleAllUpdatesOff={this.toggleAllUpdatesOff}\r\n                            toggleUpdateOff={this.toggleUpdateOff}\r\n                            toggleUpdateOn={this.toggleUpdateOn}\r\n                            addOrder={this.addOrder}\r\n                            />\r\n                    </div>\r\n                </div>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default View;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Row from \"../components/Row/Row\";\r\nimport Col from \"../components/Col/Col\";\r\nimport moment from \"moment\";\r\n\r\nclass Update extends React.Component {\r\n    state = {\r\n        option: \"\",\r\n        products: [],\r\n        singleProduct: [],\r\n        count: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getProducts();\r\n    }\r\n\r\n    getProducts = () => {\r\n        axios.get(\"/api/products\")\r\n            .then(res => {\r\n\r\n                let data = res.data;\r\n                this.setState({ products: data })\r\n            })\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    getSingleProduct = id => {\r\n        axios.get(\"/api/products/\" + id)\r\n            .then(res => this.setState({ singleProduct: res.data }))\r\n    }\r\n\r\n    \r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        let id = this.state.option\r\n\r\n        let data = {\r\n            count: this.state.count,\r\n            updated: moment()\r\n        }\r\n\r\n        axios.put(\"/api/products/\" + id, data)\r\n        .then(res => this.getSingleProduct(this.state.option))\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row className=\"text-center\">\r\n                    <div className=\"card w-100 mt-3 border-dark\">\r\n                        <h4 className=\"card-header\">Update Inventory</h4>\r\n                        <div className=\"card-body\">\r\n                            <select\r\n                                name=\"option\"\r\n                                onChange={this.handleInputChange} \r\n                                className=\"custom-select\">\r\n\r\n                                <option>Select Product</option>\r\n\r\n                                {this.state.products.map(product => (\r\n                                    <option key={product._id} \r\n                                    value={product._id}>\r\n                                    {product.brand} {product.product}</option>\r\n                                ))}\r\n                            </select>\r\n                            <button className=\"btn btn-primary mt-3\" onClick={() => this.getSingleProduct(this.state.option)}>Search</button>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n                \r\n                <Row className=\"text-center\">\r\n                    <div className=\"card w-100 mt-3 border-dark\">\r\n                        <h4 className=\"card-header\">Product</h4>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <Col className=\"form-row\">\r\n                                    <Col size=\"form-group col-sm-4 text-left\">\r\n                                        <label>Brand Name</label>\r\n                                        <input \r\n                                            name=\"brand\" type=\"text\" className=\"form-control-plaintext\" value={this.state.singleProduct.brand} readOnly></input>\r\n                                    </Col>\r\n                                    <Col size=\"form-group col-sm-4 text-left\">\r\n                                        <label>Product Name</label>\r\n                                        <input \r\n                                            name=\"product\" type=\"text\" className=\"form-control-plaintext\" value={this.state.singleProduct.product} readOnly></input>\r\n                                    </Col>\r\n                                    <Col size=\"form-group col-sm-4 text-left\">\r\n                                        <label>Product Type</label>\r\n                                        <input \r\n                                        name=\"type\" type=\"text\" className=\"form-control-plaintext\" value={this.state.singleProduct.type} readOnly></input>\r\n                                    </Col>\r\n                                </Col>\r\n                                <Col className=\"form-row\">\r\n                                    <Col size=\"form-group col-sm-4 text-left\">\r\n                                        <label>Par</label>\r\n                                        <input name=\"par\" type=\"text\" className=\"form-control-plaintext\" value={this.state.singleProduct.par} readOnly></input>\r\n                                    </Col>\r\n                                    <Col size=\"form-group col-sm-4 text-left\">\r\n                                        <label>Last Count</label>\r\n                                        <input name=\"lastCount\" type=\"text\" className=\"form-control-plaintext\" value={this.state.singleProduct.count} readOnly></input>\r\n                                    </Col>\r\n                                    {this.state.singleProduct.updated ?\r\n                                     (<Col size=\"form-group col-sm-4 text-left\">\r\n                                     <label>Last Updated</label>\r\n                                     <input name=\"updated\" type=\"text\" className=\"form-control-plaintext\" value={moment(this.state.singleProduct.updated).format('MMMM Do YYYY, h:mm A')} readOnly></input>\r\n                                 </Col>) : \r\n                                    (<Col size=\"form-group col-sm-4 text-left\">\r\n                                    <label>Last Updated</label>\r\n                                    <input name=\"updated\" type=\"text\" className=\"form-control-plaintext\" value=\"\" readOnly></input>\r\n                                </Col>)}\r\n                                    \r\n                                </Col>\r\n\r\n\r\n                                <Col size=\"form-group text-left\">\r\n                                    <label>Current Count</label>\r\n                                    <input\r\n                                        name=\"count\"\r\n                                        value={this.state.count}\r\n                                        onChange={this.handleInputChange}\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Enter the number of units\"></input>\r\n                                </Col>\r\n                                <button \r\n                                onClick={this.handleFormSubmit}\r\n                                type=\"submit\" className=\"btn btn-success\">Update Inventory Item</button>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Update;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Row from \"../components/Row/Row\";\r\nimport moment from \"moment\";\r\nimport { PDFExport } from '@progress/kendo-react-pdf';\r\n\r\nclass OrderList extends React.Component {\r\n    state = {\r\n        orderlist: [],\r\n        hide: true\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.getOrderList();\r\n    };\r\n\r\n    getOrderList = () => {\r\n        axios.get(\"/api/orderlist\")\r\n            .then(res => this.setState({ orderlist: res.data }))\r\n    };\r\n\r\n    deleteItem = id => {\r\n        axios.put(\"/api/orderlist/\" + id, { isOrdered: false })\r\n            .then(res => this.getOrderList())\r\n    }\r\n\r\n    clearList = () => {\r\n        axios.put(\"/api/orderlist\", { isOrdered: false })\r\n            .then(res => this.getOrderList())\r\n    };\r\n\r\n    exportPDF = () => {\r\n        this.orderlist.save();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Row className=\"text-center\">\r\n\r\n                <div className=\"card w-100 mt-3 border-dark\">\r\n                    <h4 className=\"card-header\">Order List</h4>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive-sm\">\r\n\r\n                            <table className=\"table table-hover\">\r\n                                <thead className=\"thead-dark\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">Brand</th>\r\n                                        <th scope=\"col\">Product</th>\r\n                                        <th scope=\"col\">Type</th>\r\n                                        <th scope=\"col\">Count</th>\r\n                                        <th scope=\"col\">Par</th>\r\n                                        <th scope=\"col\">Date Added</th>\r\n                                        <th scope=\"col\">Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.orderlist.map(item => (\r\n                                        <tr key={item._id}>\r\n\r\n                                            <td>{item.brand}</td>\r\n                                            <td>{item.product}</td>\r\n                                            <td>{item.type}</td>\r\n                                            <td>{item.par}</td>\r\n                                            <td>{item.count}</td>\r\n                                            <td>{moment(item.addedToList).format('MMMM Do YYYY, h:mm A')}</td>\r\n                                            <td><button\r\n                                                onClick={() => this.deleteItem(item._id)}\r\n                                                className=\"btn btn-danger btn-sm\">Remove from List</button></td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <button onClick={this.exportPDF} className=\"btn btn-success\">Export as PDF</button>\r\n                        <button onClick={this.clearList} className=\"btn btn-danger\">Clear Order List</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    left: '-1000px',\r\n                    height: 792,\r\n                    width: 612,\r\n                    padding: 'none',\r\n                    backgroundColor: 'white',\r\n                    margin: 'auto',\r\n                    overflowX: 'hidden',\r\n                    overflowY: 'hidden',\r\n                }}>\r\n                    <PDFExport paperSize={'Letter'}\r\n                        fileName=\"order_list.pdf\"\r\n                        title=\"Order List\"\r\n                        subject=\"\"\r\n                        keywords=\"\"\r\n                        ref={(r) => this.orderlist = r}>\r\n\r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"thead-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">Brand</th>\r\n                                    <th scope=\"col\">Product</th>\r\n                                    <th scope=\"col\">Type</th>\r\n                                    <th scope=\"col\">Count</th>\r\n                                    <th scope=\"col\">Par</th>\r\n                                    <th scope=\"col\">Date Added</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.orderlist.map(item => (\r\n                                    <tr key={item._id}>\r\n\r\n                                        <td>{item.brand}</td>\r\n                                        <td>{item.product}</td>\r\n                                        <td>{item.type}</td>\r\n                                        <td>{item.par}</td>\r\n                                        <td>{item.count}</td>\r\n                                        <td>{moment(item.addedToList).format('MMMM Do YYYY, h:mm A')}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </PDFExport>\r\n                </div>\r\n\r\n            </Row>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderList;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Row from \"../components/Row/Row\";\r\nimport moment from \"moment\";\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        lowInventory: [],\r\n        count: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.toggleAllUpdatesOff();\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    getLowInventory = () => {\r\n        axios.get(\"/api/lowinventory\").then(res => this.setState({ lowInventory: res.data }));\r\n    };\r\n\r\n    addOrder = id => {\r\n        axios.put(\"/api/orderlist/\" + id, { isOrdered: true, addedToList: moment() }).then(res => this.getLowInventory());\r\n    };\r\n\r\n    toggleUpdateOn = id => {\r\n        axios.put(\"/api/update/\" + id, { toggleUpdate: true }).then(res => this.getLowInventory());\r\n    };\r\n\r\n    toggleUpdateOff = id => {\r\n        axios.put(\"/api/update/\" + id, { toggleUpdate: false }).then(res => this.getLowInventory());\r\n    };\r\n\r\n    toggleAllUpdatesOff = () => {\r\n        axios.put(\"/api/update/\", { toggleUpdate: false }).then(res => this.getLowInventory());\r\n    };\r\n\r\n    updateItem = id => {\r\n\r\n        let data = {\r\n            count: this.state.count,\r\n            updated: moment(),\r\n            toggleUpdate: false\r\n        };\r\n\r\n        axios.put(\"/api/products/\" + id, data).then(res => this.getLowInventory());\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row className=\"text-center p-4\">\r\n                    <h2>Welcome Business Name</h2>\r\n                </Row>\r\n\r\n                <Row className=\"text-center\">\r\n                    <div className=\"card w-100 mt-3 border-dark\">\r\n                        <h4 className=\"card-header\">Low Inventory</h4>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"table-responsive-sm\">\r\n                                <table className=\"table table-hover\">\r\n                                    <thead className=\"thead-dark\">\r\n                                        <tr>\r\n                                            <th scope=\"col\">Brand</th>\r\n                                            <th scope=\"col\">Product</th>\r\n                                            <th scope=\"col\">Type</th>\r\n                                            <th scope=\"col\">Count</th>\r\n                                            <th scope=\"col\">Par</th>\r\n                                            <th scope=\"col\">Last Updated</th>\r\n                                            <th scope=\"col\">Actions</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.lowInventory.map(product =>\r\n                                            (\r\n\r\n                                                <tr className=\"table-danger\" key={product._id}>\r\n                                                    <td>{product.brand}</td>\r\n                                                    <td>{product.product}</td>\r\n                                                    <td>{product.type}</td>\r\n                                                    {product.toggleUpdate ?\r\n                                                        (<td>\r\n                                                            <input\r\n                                                                name=\"count\"\r\n                                                                type=\"text\"\r\n                                                                onChange={this.handleInputChange}\r\n                                                                value={this.state.count}\r\n                                                                className=\"form-control\"></input></td>) :\r\n\r\n                                                        (<td>{product.count}</td>)}\r\n                                                    <td>{product.par}</td>\r\n                                                    <td>{moment(product.updated).format('MMMM Do YYYY, h:mm A')}</td>\r\n                                                    {product.toggleUpdate ?\r\n                                                        (<td>\r\n                                                            <button\r\n                                                                onClick={() => this.updateItem(product._id)}\r\n                                                                className=\"btn btn-success btn-sm\">Update</button>\r\n                                                            <button\r\n                                                                onClick={() => this.toggleUpdateOff(product._id)}\r\n                                                                className=\"btn btn-danger btn-sm\">Cancel</button>\r\n                                                        </td>) :\r\n                                                        (<td>\r\n                                                            {product.isOrdered ?\r\n                                                                (<button\r\n                                                                    className=\"btn btn-success btn-sm\">✓</button>) :\r\n                                                                (<button\r\n                                                                    onClick={() => this.addOrder(product._id)}\r\n                                                                    className=\"btn btn-success btn-sm\">Add to Order List</button>)\r\n                                                            }\r\n                                                            <button\r\n                                                                onClick={() => this.toggleUpdateOn(product._id)}\r\n                                                                className=\"btn btn-warning btn-sm\">Update Inventory</button>\r\n                                                        </td>)}\r\n\r\n                                                </tr>\r\n                                            )\r\n                                        )}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Row from \"../components/Row/Row\";\r\nimport Col from \"../components/Col/Col\";\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        username: \"\",\r\n        password: \"\",\r\n    };\r\n\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value.trim()\r\n        });\r\n    };\r\n\r\n    login = event => {\r\n        event.preventDefault();\r\n        axios.post(\"/api/login\", {\r\n            username: this.state.username.toLowerCase(),\r\n            password: this.state.password\r\n        }).then(res => {\r\n            if (res.data.message) {\r\n                console.log(\"error\");\r\n            } else {\r\n                console.log(\"Login Successful\");\r\n                this.props.isAuthorized(); \r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n        this.setState({ password: \"\" });\r\n        \r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"text-center\">\r\n\r\n                <div className=\"card w-100 mt-3 border-dark\">\r\n                    <h4 className=\"card-header\">Login</h4>\r\n                    <div className=\"card-body\">\r\n                        <form>\r\n                            <Col size=\"form-group text-left\">\r\n                                <label>Username</label>\r\n                                <input\r\n                                    name=\"username\"\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    onChange={this.handleInputChange}>\r\n                                </input>\r\n                            </Col>\r\n                            <Col size=\"form-group text-left\">\r\n                                <label>Password</label>\r\n                                <input\r\n                                    name=\"password\"\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    onChange={this.handleInputChange}>\r\n                                </input>\r\n                            </Col>\r\n                            <button type=\"submit\" className=\"btn btn-primary w-50 mb-4\" onClick={this.login}>Login</button>\r\n                        </form>\r\n                        <a href=\"/register\">Register</a>\r\n                    </div>\r\n                </div>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Row from \"../components/Row/Row\";\r\nimport Col from \"../components/Col/Col\";\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n    };\r\n\r\n    register = event => {\r\n        event.preventDefault();\r\n\r\n        axios.post(\"/api/register\", {\r\n            username: this.state.username.toLowerCase(),\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }).then(res => {\r\n            if (res.data.message) {\r\n                this.setState({\r\n                    error: res.data.message\r\n                });\r\n            } else {\r\n                console.log(\"Registration Successful\");\r\n                this.props.isAuthorized();\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n        this.setState({ password: \"\"});\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"text-center\">\r\n                <div className=\"card w-100 mt-3 border-dark\">\r\n                    <h4 className=\"card-header\">Register</h4>\r\n                    <div className=\"card-body\">\r\n                        <form>\r\n                            <Col size=\"form-group text-left\">\r\n                                <label>Username</label>\r\n                                <input\r\n                                    name=\"username\"\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    onChange={this.handleInputChange}\r\n                                ></input>\r\n                            </Col>\r\n                            <Col size=\"form-group text-left\">\r\n                                <label>Email</label>\r\n                                <input\r\n                                    name=\"email\"\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    onChange={this.handleInputChange}\r\n                                ></input>\r\n                            </Col>\r\n                            <Col size=\"form-group text-left\">\r\n                                <label>Password</label>\r\n                                <input \r\n                                    name=\"password\" \r\n                                    type=\"text\" \r\n                                    className=\"form-control\"\r\n                                    onChange={this.handleInputChange}\r\n                                    ></input>\r\n                            </Col>\r\n                            <button type=\"submit\" className=\"btn btn-primary w-50 mb-4\" onClick={this.register}>Register</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react'\r\nimport {\r\n    Route,\r\n    Redirect,\r\n} from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        rest.auth === true\r\n        ? <Component {...props} />\r\n        : <Redirect to='/login' />\r\n        )} />\r\n        )\r\n\r\nexport default PrivateRoute;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Nav from \"./components/Nav/Nav\";\nimport Container from \"./components/Container/Container\";\nimport Add from \"./pages/Add\";\nimport View from \"./pages/View\";\nimport Update from \"./pages/Update\";\nimport OrderList from \"./pages/OrderList\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  state = {\n    authorized: false\n  };\n\n  componentDidMount() {\n    this.isAuthorized();\n  }\n\n  isAuthorized = () => {\n    axios.get(\"/api/authorized\")\n      .then(res => {\n        if (res.data.message) {\n          this.setState({ authorized: false });\n        } else {\n          this.setState({ authorized: true });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ authorized: false });\n      });\n  };\n\n  logout = () => {\n    axios.get(\"/api/logout\")\n      .then(res => {\n        console.log(\"Logged Out\");\n        this.isAuthorized();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    \n    return (\n      <Router>\n\n        <div>\n\n          <Nav logout={this.logout} authorized={this.state.authorized} />\n          <Container>\n            <Switch>\n              <PrivateRoute exact path=\"/home\" component={Home} auth={this.state.authorized} />\n              <PrivateRoute exact path=\"/add\" component={Add} auth={this.state.authorized} />\n              <PrivateRoute exact path=\"/view\" component={View} auth={this.state.authorized} />\n              <PrivateRoute exact path=\"/update\" component={Update} auth={this.state.authorized} />\n              <PrivateRoute exact path=\"/orderlist\" component={OrderList} auth={this.state.authorized} />\n              <Route path=\"/login\">\n                {this.state.authorized ?\n                  (<Redirect to=\"/home\" />) :\n                  (<Login isAuthorized={this.isAuthorized} />)}\n\n              </Route>\n              <Route path=\"/register\">\n                {this.state.authorized ?\n                  (<Redirect to=\"/home\" />) :\n                  (<Register isAuthorized={this.isAuthorized} />)}\n                \n              </Route>\n\n            </Switch>\n          </Container>\n\n        </div>\n      </Router >\n    );\n  }\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}